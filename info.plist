<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.philocalyst.gif-search</string>
	<key>connections</key>
	<dict>
		<key>181AB455-B85C-4CCE-B4BC-4031F1471640</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>371D9A7F-BAA6-43D8-B579-3EDE32C8EC21</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>371D9A7F-BAA6-43D8-B579-3EDE32C8EC21</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>7826CEE6-B5BC-4D83-AEC2-E5934D9D316B</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>AC936E44-BF1C-4C98-B5DD-3FD7DECA6445</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E9EEA304-4FDB-4325-B73D-9756D1642543</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>181AB455-B85C-4CCE-B4BC-4031F1471640</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Philocalyst</string>
	<key>description</key>
	<string>Search gifs using grid view!</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Gif Search</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>E9EEA304-4FDB-4325-B73D-9756D1642543</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>skipqueryencode</key>
				<false/>
				<key>skipvarencode</key>
				<false/>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>7826CEE6-B5BC-4D83-AEC2-E5934D9D316B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>columncount</key>
				<integer>5</integer>
				<key>filterable</key>
				<true/>
				<key>fixedorder</key>
				<false/>
				<key>imageaspect</key>
				<integer>0</integer>
				<key>inputfile</key>
				<string>./search.swift</string>
				<key>inputtype</key>
				<integer>1</integer>
				<key>loadingtext</key>
				<string>...</string>
				<key>showsubtitles</key>
				<true/>
				<key>showtitles</key>
				<true/>
				<key>subtitlesinfooter</key>
				<false/>
				<key>titlesinfooter</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.userinterface.grid</string>
			<key>uid</key>
			<string>371D9A7F-BAA6-43D8-B579-3EDE32C8EC21</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>{var:SEARCH_KEYWORD}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Wait...</string>
				<key>script</key>
				<string></string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>./autocomplete.swift</string>
				<key>subtext</key>
				<string>Search for your favorite gifs!</string>
				<key>title</key>
				<string>Gif Search</string>
				<key>type</key>
				<integer>8</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>181AB455-B85C-4CCE-B4BC-4031F1471640</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<true/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string></string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>./download.sh</string>
				<key>type</key>
				<integer>8</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>AC936E44-BF1C-4C98-B5DD-3FD7DECA6445</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string># Gif Search Alfred Workflow

Search and download GIFs using Tenor’s API in a grid view.

## Setup

1. Obtain a Tenor API Key  
   • Visit https://developers.google.com/tenor/guides/quickstart and sign in or register.  
   • Return to the quickstart page, and click "Get a Key"
   • Create a project from the dropdown
   • Copy the key from "SHOW KEY" result

2. Configure the workflow  
   • Open **Alfred Preferences → Workflows → Gif Search**.  
   • In the workflow’s **Variables** pane, set:
     – **API_KEY**: Your Tenor API Key  
     – **MAX_RESULTS**: Number of preview items (1–50, default 10)  
     – **PREVIEW_QUALITY**: Low (nanogif), Medium (tinygif), High (gif)  
     – **GIF_QUALITY**: Low (nanogif), Medium (tinygif), High (gif), Video (mp4)  

## Usage

Type `gif &lt;search terms&gt;` to fetch previews:

![Alfred search for gif](./Assets/search-results.png)

In the grid:  
• &lt;kbd&gt;↩︎&lt;/kbd&gt; on an item → downloads and copies to clipboard  
• &lt;kbd&gt;⌘↩︎&lt;/kbd&gt; → open in browser 
• Arrow keys → navigate  

![Results grid](./Assets/grid-results.png)

## Quality &amp; Network Considerations

Tenor offers many formats; this workflow exposes four common ones:

| Format   | Type           | Dimensions                     | Median Size | Ideal Use                           |
|----------|----------------|--------------------------------|-------------|-------------------------------------|
| nanogif  | GIF (smallest) | up to 90 px tall               | ~56 KB      | Low-bandwidth mobile previews       |
| tinygif  | GIF (small)    | up to 220 px wide              | ~101 KB     | Mobile previews &amp; lightweight shares|
| gif      | GIF (full)     | original upload dimensions     | ~956 KB     | Desktop shares, high-bandwidth      |
| mp4      | Video (single) | padded to 8 px video increments| ~91 KB      | Desktop video shares, fast loading  |

• For **mobile/low-bandwidth**, choose **nanogif** or **tinygif**.  
• For **desktop/high-bandwidth**, choose **gif** or **mp4** (Video).  
• Higher quality increases file size and load time.  

For full details on all formats (WebM, loopedmp4, WebP, etc.), see Tenor’s docs:  
https://developers.google.com/tenor/guides/response-objects-and-errors#content-formats

## License

MIT. Contributions welcome via GitHub PRs or issues.</string>
	<key>uidata</key>
	<dict>
		<key>181AB455-B85C-4CCE-B4BC-4031F1471640</key>
		<dict>
			<key>colorindex</key>
			<integer>9</integer>
			<key>xpos</key>
			<real>75</real>
			<key>ypos</key>
			<real>345</real>
		</dict>
		<key>371D9A7F-BAA6-43D8-B579-3EDE32C8EC21</key>
		<dict>
			<key>colorindex</key>
			<integer>2</integer>
			<key>xpos</key>
			<real>285</real>
			<key>ypos</key>
			<real>340</real>
		</dict>
		<key>7826CEE6-B5BC-4D83-AEC2-E5934D9D316B</key>
		<dict>
			<key>colorindex</key>
			<integer>9</integer>
			<key>xpos</key>
			<real>445</real>
			<key>ypos</key>
			<real>225</real>
		</dict>
		<key>AC936E44-BF1C-4C98-B5DD-3FD7DECA6445</key>
		<dict>
			<key>colorindex</key>
			<integer>9</integer>
			<key>xpos</key>
			<real>445</real>
			<key>ypos</key>
			<real>435</real>
		</dict>
		<key>E9EEA304-4FDB-4325-B73D-9756D1642543</key>
		<dict>
			<key>colorindex</key>
			<integer>1</integer>
			<key>note</key>
			<string>Thanks for downloading! 

I highly recommend you set a hotkey for this so that it's even easier to trigger it.

I personally set it to double-tapping the ⌘ (command) key.</string>
			<key>xpos</key>
			<real>175</real>
			<key>ypos</key>
			<real>60</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>gif</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>The keyword for the workflow</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>SEARCH_KEYWORD</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>gif</string>
				<key>pairs</key>
				<array>
					<array>
						<string>Low</string>
						<string>nanogif</string>
					</array>
					<array>
						<string>Medium</string>
						<string>tinygif</string>
					</array>
					<array>
						<string>High</string>
						<string>gif</string>
					</array>
					<array>
						<string>Video</string>
						<string>mp4</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string>Impacts download speed</string>
			<key>label</key>
			<string>Output gif quality</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>GIF_QUALITY</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>defaultvalue</key>
				<integer>10</integer>
				<key>markercount</key>
				<integer>6</integer>
				<key>maxvalue</key>
				<integer>50</integer>
				<key>minvalue</key>
				<integer>1</integer>
				<key>onlystoponmarkers</key>
				<false/>
				<key>showmarkers</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Number of preview items</string>
			<key>type</key>
			<string>slider</string>
			<key>variable</key>
			<string>MAX_RESULTS</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>AIzaSyCh8JwsTMigtE0Z0unEPRu43mTZMdo-wPM</string>
				<key>placeholder</key>
				<string>AIzaSyCh8JwsTMigtE0Z0unEPRu43mTZMdo-wPM</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>Default uses my own but is a casualty to rate limits, getting your own is free.</string>
			<key>label</key>
			<string>Tenor API Key</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>API_KEY</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>tinygif</string>
				<key>pairs</key>
				<array>
					<array>
						<string>Low</string>
						<string>nanogif</string>
					</array>
					<array>
						<string>Medium</string>
						<string>tinygif</string>
					</array>
					<array>
						<string>High</string>
						<string>gif</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string>Increases latency on slow connections</string>
			<key>label</key>
			<string>Preview gif quality</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>PREVIEW_QUALITY</string>
		</dict>
	</array>
	<key>version</key>
	<string>1.0.0</string>
	<key>webaddress</key>
	<string>https://github.com/philocalyst/Gif-Search-Alfred</string>
</dict>
</plist>
